#!/bin/bash
#kiran.vkvr@gmail.com
#https://github.com/Kiran-Bose/supreme

#------------------------------------------------------------------------------------------------
function kbbar ()
{
user=$(whoami)
ptghistory=()
local i
local LENGTH=50
local REMAINING="\e[107m \e[0m"
local COMPLETED="\e[42m \e[0m"
tots=$3
IFS=$(echo -en "\n\b")
if [ "$1" == "$2" ] || [ "$tots" == 0 ]
then
return
fi
if [[ ! -d "$2" ]] || [[ ! -f "$2" ]]
then
sleep 1
fi
if [[ (-d "$2") || (-f "$2") ]] && [[ (-d "$1") || (-f "$1") ]] && [[ $tots != 0 ]]
then
chk1=$(echo "$1" | rev | cut -d/ -f2- | rev )
chk2=$(echo "$2" | rev | cut -d/ -f2- | rev )
fs1=$(df "$chk1" | awk '{print $1}' | sed 1d)
fs2=$(df "$chk2" | awk '{print $1}' | sed 1d)
	if [[ ("$fs1" == "$fs2") && ($qbar == 0) ]]
	then
	return
	else
	sptg=0
	totd=0
	arraysz1=()
	ptg=0
	ss=$tots
	bypass=$(sudo whoami)
	echo -en "\e[44;97;10;82m  0%  \e[0m "
		for i in `seq 1 $LENGTH`
		do
		echo -en "$REMAINING"
		done
	while echo "($ptg < 99)" | bc | grep -q 1
	do
	totd=0	
		if [[ (-d "$1") || (-f "$1") ]]
		then
			if [[ (-d "$2") || (-f "$2") ]]
			then
				if [[ "$2" == *"/1000/gvfs/mtp"* ]]
				then
				IFS=$'\n' read -rd '' -a arraysz1 <<< `ls -Ral "$2" | awk '{print $5}' | sed 's/[^0-9]*//g'` 
				else
				IFS=$'\n' read -rd '' -a arraysz1 <<< `sudo ls -Ral "$2" | awk '{print $5}' | sed 's/[^0-9]*//g'` 
				fi
				for ((i=0; i<${#arraysz1[@]}; i++)); do
				totd=$(($totd + "${arraysz1[$i]}"))	
				done
			echo -en "\0015"
			ds=$totd
			ptg=$( echo "scale=6; $ds/$ss * 100" | bc )
			sptg=${ptg%.*}
			clb=$( echo "$ptg/2" | bc )
			ptghistory+=($sptg)
				if(($sptg>100)) > /dev/null 2>&1
				then
				echo -en "\e[44;97;10;82m 100% \e[0m\e[89m \e[0m"
					for i in `seq 1 50`
					do
					echo -en "$COMPLETED"
					done
					echo -e "\n"
				return
				elif(($sptg>0)) > /dev/null 2>&1
				then
					if((${#ptghistory[@]}>100)) > /dev/null 2>&1
					then
						if [[ $(pgrep -xn cp) || $(pgrep -xn mv) ]]
						then
						pass=donothing
						else
						echo
						return 1
						fi
					fi
				fi
				
			echo -en "\e[44;97;10;82m  $sptg% \e[0m\e[89m \e[0m"
				for i in `seq 1 $clb`
				do
				echo -en "$COMPLETED"
				done
			else
			echo -e "\e[91mTransfer error/Device disconnected\e[0m"
			return 1
			fi
		else
		echo
		break
		fi
	sleep 0.18
	done
		if echo "($ptg > 99)" | bc | grep -q 1
		then
		echo -en "\0015"
		echo -en "\e[44;97;10;82m 100% \e[0m\e[89m \e[0m"
			for i in `seq 1 50`
			do
			echo -en "$COMPLETED"
			done
			echo -e "\n"
		fi
	fi
fi
}

#------------------------------------------------------------------------------------------------
