#!/bin/bash

#------------------------------------------------------------------------------------------------
function kbbar ()
{
local i
local PROG_BAR_MAX=50
local PROG_BAR_TODO="\e[107m \e[0m"
local PROG_BAR_DONE="\e[42m \e[0m"
tots=$3
IFS=$(echo -en "\n\b")
if [ "$1" == "$2" ] || [ "$tots" == 0 ]
then
return
fi
sleep 1
if [[ (-d "$2") || (-f "$2") ]] && [ $tots != 0 ]
then
	if [[ ("$1" == "/media/kb"*) && ("$2" == "/media/kb"*) ]]
	then
	chk1=$(echo "$1" | cut -d '/' -f 1-4 )
	chk2=$(echo "$2" | cut -d '/' -f 1-4 )
	else
	chk1=$(echo "$1" | cut -d '/' -f 1-3 )
	chk2=$(echo "$2" | cut -d '/' -f 1-3 )
	fi
fs1=$(df "$chk1" | awk '{print $1}' | sed 1d)
fs2=$(df "$chk2" | awk '{print $1}' | sed 1d)
	if [[ ("$fs1" == "$fs2") && ($qbar == 0) ]]
	then
	return
	else
	sptg=0
	totd=0
	arraysz1=()
	ptg=0
	ss=$tots
	echo -en "\e[44;97;10;82m  0%  \e[0m\e[89m \e[0m"
	for i in `seq 1 $PROG_BAR_MAX`
	do
	echo -en "$PROG_BAR_TODO"
	done

	while echo "($ptg < 99)" | bc | grep -q 1
	do
	totd=0
		if [[ "$2" == *"/1000/gvfs/mtp"* ]]
		then
		IFS=$'\n' read -rd '' -a arraysz1 <<< `ls -Ral "$2" | awk '{print $5}' | sed 's/[^0-9]*//g'` 
		else
		IFS=$'\n' read -rd '' -a arraysz1 <<< `sudo ls -Ral "$2" | awk '{print $5}' | sed 's/[^0-9]*//g'` 
		fi
		for ((i=0; i<${#arraysz1[@]}; i++)); do
		totd=$(($totd + "${arraysz1[$i]}"))	
		done
	echo -en "\0015"
	ds=$totd
	ptg=$( echo "scale=6; $ds/$ss * 100" | bc )
	sptg=${ptg%.*}
	clb=$( echo "$ptg/2" | bc )
	echo -en "\e[44;97;10;82m  $sptg% \e[0m\e[89m \e[0m"
	for i in `seq 1 $clb`
	do
	echo -en "$PROG_BAR_DONE"
	done
	sleep 0.1
	done
	echo -en "\0015"
	echo -en "\e[44;97;10;82m 100% \e[0m\e[89m \e[0m"
	for i in `seq 1 50`
	do
	echo -en "$PROG_BAR_DONE"
	done
	echo -e "\n"
	fi
fi
}

#------------------------------------------------------------------------------------------------
