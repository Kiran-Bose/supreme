#!/bin/bash
#kiran.vkvr@gmail.com
#https://github.com/Kiran-Bose/supreme

if [[ -f /usr/bin/kbfunctions_basic ]] && [[ -f /usr/bin/progress_bar ]]
then 
. /usr/bin/kbfunctions_basic
. /usr/bin/progress_bar
elif [[ -f /usr/local/bin/kbfunctions_basic ]] && [[ -f /usr/local/bin/progress_bar ]]
then
. /usr/local/bin/kbfunctions_basic
. /usr/local/bin/progress_bar
else
buildpath=$(pwd)
. "$buildpath"/kbfunctions_basic
. "$buildpath"/progress_bar
fi

#------------------------------------------------------------------------------------------------
function szcum ()
{
tots=0
if [[ (-d "$1") || (-f "$1") ]]
then
	if [[ "$1" == *"/$UID/gvfs/mtp"* ]]
	then
	IFS=$'\n' read -rd '' -a arraysz <<< `ls -Ral "$1" | awk '{print $5}' | sed 's/[^0-9]*//g'` 
	else
	IFS=$'\n' read -rd '' -a arraysz <<< `sudo ls -Ral "$1" | awk '{print $5}' | sed 's/[^0-9]*//g'` 
	fi 
	for ((i=0; i<${#arraysz[@]}; i++)); do
	tots=$(($tots + "${arraysz[$i]}"))	
	done
echo "$tots"
else
echo "f"
fi
}

#------------------------------------------------------------------------------------------------
function kbcmusage()
{
  cat <<EOF
kbcm
Description: Copy/Move with integrated progress bar.
Usage: kbcm [Flags] [source/path] [Destination/path]
  -m  Move
  -c  Copy
  -v  version
Note: Use single flag.Using multiple flags simultaneously may provide undesired result
Examples:
  kbcm -c /home/linuxuser/Videos/a.mp4 /home/linuxuser/Desktop
EOF
}
#------------------------------------------------------------------------------------------------
OPTIND=1
if [[ -z "$actnkey" ]]
then
actnow="y"
fi
while getopts ":cmv" option; do
  	case "${option}" in
	c)actn="cp -rf"
	  lbl="COPY";;
	m)actn="mv -f"
	  lbl="MOVE";;
	v)echo -e "version 1.1.1-SU" && exit 0;;
	\?)kbcmusage && exit 0;;
	esac
done
if [[ $# -ne 3 ]]; then
kbcmusage && exit 0
fi
tots=$(szcum "$2")
if [[ "$tots" == "f" ]]
then
echo -e "\e[91mSource path not found\e[0m"
exit 0
elif [[ ! -d "$3" ]]
then
echo -e "\e[91mDestination path not found\e[0m"
exit 0
else
feedemt=$(echo "$2" | rev | cut -d '/' -f 1 | rev)
colorfmt "$2 --$lbl--> $3"
	if [[ -d "$3"/"$feedemt" ]] || [[ -f "$3"/"$feedemt" ]] && [[ -z "$actnkey" ]]
	then
	instfmt "$feedemt exists in $3"
	instfmt "y [Overwrite current] | yy [Overwrite all] | n [Skip current] | nn [Skip all]"
	read actnfeed
	actncheck="y"
		while [[ "$actncheck" == "y" ]]
		do
			case "$actnfeed" in
			y|Y)unset actnkey
			    actnow="y"
			    actncheck="n";;
			yy|YY)actnkey="all"
			      actnow="y"
			      actncheck="n";;
			n|N)unset actnkey
			    actnow="n"
			    actncheck="n";;
			nn|NN)actnkey="all"
			      actnow="n"
			      actncheck="n";;
			*)echo -e "\e[91mInvalid Choice\e[0m";;
			esac
		done
	fi
	case "$actnow" in
	y|Y)if [[ "$2" == *"/$UID/gvfs/mtp"* ]] || [[ "$3" == *"/$UID/gvfs/mtp"* ]]
	    then
			if [[ "$2" != *"/$UID/gvfs/mtp"* ]] && [[ "$lbl" == "MOVE" ]]
			then
			(cp -r "$2" "$3" | kbbar "$2" "$3"/"$feedemt" "$tots";
				if [[ ${PIPESTATUS[0]} == 1 ]]
				then
				echo -e "\e[91m❎️ Failed\e[0m"
				else
					if [[ -d "$3"/"$feedemt" ]] || [[ -f "$3"/"$feedemt" ]]
					then
						if [[ -d "$2" ]] || [[ -f "$2" ]]
						then
						sudo rm -rf "$2" && echo -e "\e[92m✔️ Done\e[0m" || echo -e "\e[91m❎️ Failed\e[0m"
						fi
					fi
				fi)
			else
			($actn "$2" "$3" | kbbar "$2" "$3"/"$feedemt" "$tots";
				if [[ ${PIPESTATUS[0]} == 1 ]]
				then
				echo -e "\e[91m❎️ Failed\e[0m"
				else
				echo -e "\e[92m✔️ Done\e[0m"
				fi)
			fi
	     else
	     chk3=$(echo "$2" | rev | cut -d/ -f2- | rev )
	     chk4=$(echo "$3" | rev | cut -d/ -f1- | rev )
	     fs3=$(df "$chk3" | awk '{print $1}' | sed 1d)
	     fs4=$(df "$chk4" | awk '{print $1}' | sed 1d)
			if [[ "$fs3" != "$fs4" ]] && [[ "$lbl" == "MOVE" ]]
			then
			(sudo cp -r "$2" "$3" | kbbar "$2" "$3"/"$feedemt" "$tots";
				if [[ ${PIPESTATUS[0]} == 1 ]]
				then
				echo -e "\e[91m❎️ Failed\e[0m"
				else
					if [[ -d "$3"/"$feedemt" ]] || [[ -f "$3"/"$feedemt" ]]
					then
						if [[ -d "$2" ]] || [[ -f "$2" ]]
						then
						sudo rm -rf "$2" && echo -e "\e[92m✔️ Done\e[0m" || echo -e "\e[91m❎️ Failed\e[0m"
						fi
					fi
				fi)
			else
			(sudo $actn "$2" "$3" | kbbar "$2" "$3"/"$feedemt" "$tots";
				if [[ ${PIPESTATUS[0]} == 1 ]]
				then
				echo -e "\e[91m❎️ Failed\e[0m"
				else
				echo -e "\e[92m✔️ Done\e[0m"			
				fi)
			fi
	     fi;;
	*)echo -e "\e[91mSkipping $feedemt\e[0m"
	  sleep 1;;
	esac
fi


#------------------------------------------------------------------------------------------------
